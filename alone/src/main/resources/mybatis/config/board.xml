<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- MyBatis에서 namespace는 필수적으로 명시해야 함 -->
<mapper namespace="board">
	<resultMap type="imageVO" id="imageRM">
		<result column="image_name" property="imageName" />
	</resultMap>
	<resultMap type="boardVO" id="boardRM">
		<result column="board_no" property="boardNo"/>
		<result column="id" property="memberVO.id"/>
	</resultMap>

	<select id="imageList" resultMap="imageRM" resultType="imageVO">
	SELECT image_name FROM image WHERE NOT image_name LIKE 'main%'and board_no=#{value}
	</select>
	
	
	<select id="introduceFirstImage" resultMap="imageRM" resultType="imageVO">
	SELECT image_name FROM image WHERE image_name LIKE 'main%' and board_no=#{value}
	</select>

   	<insert id ="imageUpload" parameterType="imageVO" >
		<selectKey resultType="int" keyProperty="imageNo" order="BEFORE">
			select image_seq.nextval from dual
		</selectKey>
	insert into image(image_no, image_name, board_no) 
    values(#{imageNo}, #{imageName}, #{boardNO})
	</insert>
	
	<delete id="imageDelete">
	   delete from image where image_name=#{value}
	</delete>
	
	<select id="commentList" resultType="commentVO">
		select boardcomment.content,member.nickname as "memberVO.nickName",
		boardcomment.comment_no as commentNo,
		member.id as "memberVO.id",to_char(boardcomment.time_posted,'yyyy.mm.dd') as
		timePosted
		from BOARDCOMMENT boardcomment,member member
		where boardcomment.id=member.id and boardcomment.board_no=#{value}
		ORDER BY boardcomment.comment_no ASC
	</select>


	<insert id="insertComment" parameterType="commentVO">
		<selectKey resultType="integer" keyProperty="commentNo"
			order="BEFORE">
			select comment_seq.nextval from dual
		</selectKey>
		insert into boardcomment(comment_no,board_no,content,time_posted,id)
		values (#{commentNo}, #{boardNo}, #{content}, sysdate, #{memberVO.id})
	</insert>

	<update id="updateComment" parameterType="commentVO">
	update boardcomment set content = #{content} where comment_no=#{commentNo}
	</update>


	
	<delete id="deleteComment" parameterType="commentVO">
		delete from boardcomment where comment_no = #{commentNo} 
	</delete>

	
	<update id="updateHitBoard" parameterType="int">
	update review set hits=hits+1 where board_no=#{value}
	</update>

	<update id="reviewBoardUpdate" parameterType="reviewVO">
	update board
	set content=#{content}, time_posted=sysdate
	where board_no=#{boardNo}
   </update>
   
   <update id="boardDelete" parameterType="int">
   update board set board_enabled=0 where board_no= #{value}
   </update>

   <update id="meetingboardUpdate" parameterType="meetingVO">
	update board
	set content=#{content}, time_posted=sysdate
	where board_no=#{boardNo}
   </update>


	
	<select id="likeCheckInfo" parameterType="boardVO" resultMap="boardRM"> 
		select member.id,board.board_no,likescheck.likeCheck from member member,board board,likescheck likescheck
		where board.board_no = likescheck.board_no and member.id = likescheck.id and likescheck.id = #{memberVO.id} and likescheck.board_no=#{boardNo} 
	</select>
	
	<insert id="insertLikeCheck" parameterType="boardVO">
		insert into likescheck(id,board_no) values(#{memberVO.id},#{boardNo})
	</insert>
	
	<update id="likeCheckUp" parameterType="boardVO">
		update likescheck set likeCheck = likeCheck+1 where id=#{memberVO.id} and board_no=#{boardNo}
	</update>
</mapper>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















