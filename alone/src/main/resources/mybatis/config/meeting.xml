<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- MyBatis에서 namespace는 필수적으로 명시해야 함 -->
<mapper namespace="meeting">
	<resultMap type="meetingVO" id="meetingRM">
		<result column="board_no" property="boardNo"/>
		<result column="time_posted" property="timePosted"/>
		<result column="nickname" property="memberVO.nickName"/>
		<result column="id" property="memberVO.id"/>
		<result column="board_no" property="boardNo"/>
	</resultMap>
	
	<select id="meetingList" resultMap="meetingRM" parameterType="pagingBean">
		select board_no, title, region, interest, hits, time_posted, nickname 
		from (
			select row_number() over(order by board.board_no desc) as rnum, board.board_no, meeting.title, meeting.region, 
			meeting.interest, meeting.hits,to_char(board.time_posted,'YYYY.MM.DD') as time_posted, member.nickname
			from board board, meeting meeting, member member
			where board.board_no = meeting.board_no and board.id = member.id
		)
		where rnum between #{startRowNumber} and #{endRowNumber}
	</select>
	
	<select id="getMeetingRegionList" resultMap="meetingRM" parameterType="string">
		select meeting.board_no, meeting.title, meeting.region, meeting.interest, meeting.hits, board.time_posted, member.nickname
		from board board, meeting meeting, member member 
		where board.board_no = meeting.board_no and board.id = member.id and meeting.region = #{value}
	</select>

	<select id="getRegionInfo" resultType="meetingVO">
		select distinct(region) from meeting
	</select>

	<insert id="boardWrite" parameterType="meetingVO">
		<selectKey resultType="integer" keyProperty="boardNo" order="BEFORE">
			select board_seq.nextval from dual
		</selectKey>
		insert into board(board_no, id, content, time_posted)
		values(#{boardNo}, #{memberVO.id}, #{content}, sysdate)
	</insert>
	
	<insert id="meetingWrite" parameterType="meetingVO">
		insert into meeting(board_no, title, region, location, interest)
		values(#{boardNo}, #{title}, #{region}, #{location}, #{interest})
	</insert>
	
	<select id="meetingDetail" resultMap="meetingRM" parameterType="int">
		select meeting.board_no, meeting.title, meeting.region, meeting.interest, meeting.hits, board.time_posted,
		member.nickname, board.content,meeting.location,member.id
		from board board, meeting meeting, member member 
		where board.board_no = meeting.board_no 	and board.id = member.id and meeting.board_no= #{value}
	</select>
	
    <select id="getTotalContentCount" resultType="int">
		select count(meeting.board_no) from meeting meeting,board board 
		where meeting.board_no=board.board_no and board.board_enabled=1
	</select>
	
	<select id="getTitleSearchCount" resultType="int" parameterType="string">
		select count(*) from board board, meeting meeting
		where board.board_no=meeting.board_no and meeting.title=#{value} and board.board_enabled=1
	</select>
	
	<select id="getWriterSearchCount" resultType="int" parameterType="string">
	    select count(*) from board board, meeting meeting, member member
	    where board.board_no=meeting.board_no and member.nickname=#{value} and board.id=member.id 
	    and board.board_enabled=1
	</select>
	
	<select id="meetingTitleSearchList" resultMap="meetingRM" resultType="meetingVO" parameterType="map">
		SELECT board_no, region, interest, title, nickname, time_posted, hits 
		FROM ( 
			SELECT row_number() over(order by board.board_no desc) rnum, board.board_no, meeting.region, meeting.interest, 
			meeting.title, member.nickname, to_char(board.time_posted, 'yyyy.mm.dd') as time_posted, meeting.hits 
			FROM board board, meeting meeting, member member 
			WHERE board.board_no=meeting.board_no and member.id=board.id and meeting.title=#{keyWord} and board.board_enabled=1
		) 
		WHERE rnum between #{pb.startRowNumber} and #{pb.endRowNumber}
	</select>
	
	<select id="meetingWriterSearchList" resultMap="meetingRM" resultType="meetingVO" parameterType="map">
		SELECT board_no, region, interest, title, nickname, time_posted, hits 
		FROM (
			SELECT row_number() over(order by board.board_no desc) rnum, board.board_no, meeting.region, meeting.interest, 
			meeting.title, member.nickname, to_char(board.time_posted, 'yyyy.mm.dd') as time_posted, meeting.hits
			FROM board board, meeting meeting, member member
			WHERE board.board_no=meeting.board_no and member.id=board.id and member.nickname=#{keyWord} and board.board_enabled=1
		) 
		WHERE rnum between #{pb.startRowNumber} and #{pb.endRowNumber}
	</select>
	
	<update id="meetingUpdate" parameterType="meetingVO">
		update meeting
		set title=#{title}, region=#{region}, location= #{location}, interest=#{interest}
		where board_no=#{boardNo}
	</update>

	<update id="updateHitBoard" parameterType="int">
		update meeting set hits=hits+1 where board_no=#{value}
	</update>
	

</mapper> 
